import React, { Component } from 'react';
import { View, ScrollView, ActivityIndicator, Alert } from 'react-native';
import { container, colors, text, dimensions } from '../styles/index';
import { Cards, Button, TextField } from '../components/index';
// import { Cards, TextField } from '../components/index';
import { LinearGradient } from 'expo-linear-gradient';
import { useDispatch } from 'react-redux';
import * as authActions from '../store/actions/auth';

// const AuthScreen = props => {
class AuthScreen extends Component {
  render() {

    state = {
      controls: {
        email: {
          value: '',
          validity: false,
          validationRules: {
            isEmail: true
          },
          touched: false
        },
        password: {
          value: '',
          validity: false,
          validationRules: {
            isPassword: true // doubt
          },
          touched: false
        }
      },
      // isLoading: false
    }

    // Update text field
    onChangeTextField = (key, value) => {
      // cannot return something like this.prevState
      this.setState(prevState => {
        return {
          controls: {
            ...prevState.controls,
            [key]: {
              ...prevState.contorls[key],
              value: value,
              validity: validity(value, prevState.controls[key].validationRules),
              touched: true
            }
          }
        }
      })

    }

    // State change - dispatch actions
    onButtonPressed = () => {
      // this.setState({ isLoading: !isLoading })
      // this.setState({ isLoading: true })
    }

    return (
      // this flex is necessary for persistency
      <View style={container.screen}>
        <LinearGradient colors={['#ffedff', '#ffe3ff']} style={container.centerScreen}>
          <Cards style={container.authContainer}>
            <ScrollView>
              <TextField
                id='email'
                label='E-Mail'
                title={'Email'}
                color={colors.black}
                borderColor={colors.black}
                borderWidth={1}
                onChangeInput={onChangeTextHandler}
                initialValue=''
                errorText='Please enter valid email'
                required
                keyboardType='email-address'
                autoCapitalize='none'
              />
              <TextField
                id='password'
                label='Password'
                title={'Password'}
                color={colors.black}
                borderColor={colors.black}
                borderWidth={1}
                minLength={5}
                onChangeInput={onChangeTextHandler}
                initialValue=''
                errorText='Please enter valid password'
                keyboardType='default'
                required
                secureTextEntry
              />
              <View style={{ alignItems: 'center', paddingVertical: 5 }}>
                <Button
                  fontSize={text.buttonText}
                  // width={dimensions.width / 3}
                  // height={20}
                  borderWidth={1}
                  padding={10}
                  color={colors.white}
                  textColor={colors.red}
                  borderColor={colors.white}
                  borderRadius={5}
                  text={'Login'}
                  onButtonPress={() => onButtonPress()}
                />
              </View>
            </ScrollView>
          </Cards>
        </LinearGradient>
      </View>
    );
  }
}

export default AuthScreen;
